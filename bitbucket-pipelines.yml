pipelines:
  branches:
    master:
      - step:
          name: Deploy to Adysis Prebid AWS S3
          deployment: Adysis Prebid AWS S3
          # trigger: manual  # Uncomment to make this a manual deployment.
          script:
            - pipe: atlassian/aws-s3-deploy:0.4.3
              variables:
                  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                  AWS_DEFAULT_REGION: 'us-east-1'
                  S3_BUCKET: 'adysis-ad-delivery-js'
                  LOCAL_PATH: 'prebid/'
                  #ACL: 'public-read'
                  CACHE_CONTROL: 'max-age=31536000'
                  #EXPIRES: '2018-10-01T00:00:00+00:00'
                  DELETE_FLAG: 'false'
                  #DIFFERENTIAL: 'true'
                  #EXTRA_ARGS: '--size-only'
                  #DEBUG: 'true'
            - pipe: atlassian/aws-cloudfront-invalidate:0.1.1
              variables:
                  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                  AWS_DEFAULT_REGION: 'us-east-1'
                  DISTRIBUTION_ID: 'E2ERH7S5YEPI4G' # ad_adysis          
      - step:
          name: Clear adcloudflare_adysis_com
          deployment: Clear adcloudflare_adysis_com
          # trigger: manual  # Uncomment to make this a manual deployment.
          script:
            - pipe: atlassian/aws-cloudfront-invalidate:0.1.1
              variables:
                  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                  AWS_DEFAULT_REGION: 'us-east-1'
                  DISTRIBUTION_ID: 'E1D9CLCWPVPARB' # adcloudflare_adysis_com              
      - step:
          name: Deploy to ads_vsvl_co_uk adysis backup
          deployment: ads_vsvl_co_uk adysis backup
          # trigger: manual  # Uncomment to make this a manual deployment.
          script:
            - pipe: atlassian/aws-s3-deploy:0.4.1
              variables:
                  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                  AWS_DEFAULT_REGION: 'us-east-1'
                  S3_BUCKET: 'adysis-ad-reporter'
                  LOCAL_PATH: 'prebid/'
                  #ACL: 'public-read'
                  CACHE_CONTROL: 'max-age=31536000'
                  #EXPIRES: '2018-10-01T00:00:00+00:00'
                  DELETE_FLAG: 'true'
                  EXTRA_ARGS: '--size-only'
                  #DEBUG: 'true'
            - pipe: atlassian/aws-cloudfront-invalidate:0.1.1
              variables:
                  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
                  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
                  AWS_DEFAULT_REGION: 'us-east-1'
                  DISTRIBUTION_ID: 'E33HVAM2MUB5X3' # ads_vsvl              
      - step:
          name: Clear CloudFlare Cache
          deployment: Clear CloudFlare Cache
          # trigger: manual  # Uncomment to make this a manual deployment.
          script:       
            - curl -X POST "https://api.cloudflare.com/client/v4/zones/$CF_ZONE/purge_cache" -H "X-Auth-Email:$CF_EMAIL" -H "X-Auth-Key:$CF_AUTH_KEY" -H "Content-Type:application/json" --data '{"purge_everything":true}'
      - step:
          name: Deploy to Adysis Prebid Google Bucket
          deployment: Adysis Prebid Google Bucket
          # trigger: manual  # Uncomment to make this a manual deployment.
          script:       
            - pipe: atlassian/google-cloud-storage-deploy:0.4.0
              variables:
                  KEY_FILE: $GOOGLE_KEY_FILE
                  PROJECT: 'divine-bonbon-271312'
                  BUCKET: 'adysis'
                  SOURCE: 'prebid/.'
                  CACHE_CONTROL: 'max-age=31536000' # Optional.
                  # CONTENT_DISPOSITION: '<string>' # Optional.
                  # CONTENT_ENCODING: '<string>' # Optional.
                  # CONTENT_LANGUAGE: '<string>' # Optional.
                  # CONTENT_TYPE: '<string>' # Optional.
                  # ACL: '<string>' # Optional.
                  # STORAGE_CLASS: '<string>' # Optional.
                  # EXTRA_ARGS: 'rsync' # Optional.
                  # DEBUG: '<boolean>' # Optional.
      - step:
          name: Clear BunnyCDN Cache
          deployment: Clear BunnyCDN Cache
          # trigger: manual  # Uncomment to make this a manual deployment.
          script:
           - curl -X POST "https://bunnycdn.com/api/pullzone/$BUNNY_ID/purgeCache" -H "Content-Length:0" -H "AccessKey:$BUNNY_KEY"